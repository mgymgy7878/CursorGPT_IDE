# UI/UX Smoke Evidence Script
# PR #12 i√ßin smoke kanƒ±tƒ± toplama

param(
    [string]$BaseUrl = "http://127.0.0.1:3003",
    [int]$WaitSeconds = 60,
    [string]$PRNumber = "12"
)

$ErrorActionPreference = "Continue"
$d = Get-Date -Format "yyyyMMdd"
$evidenceDir = "evidence/ui-ux/$d"

Write-Host "========================================" -ForegroundColor Magenta
Write-Host "UI/UX SMOKE EVIDENCE ‚Äî PR #$PRNumber" -ForegroundColor Magenta
Write-Host "========================================`n" -ForegroundColor Magenta

# 1. Evidence klas√∂r√º olu≈ütur
Write-Host "[STEP 1/6] Evidence klas√∂r√º olu≈üturuluyor..." -ForegroundColor Cyan
New-Item -ItemType Directory -Force -Path $evidenceDir | Out-Null
Write-Host "‚úÖ $evidenceDir olu≈üturuldu`n" -ForegroundColor Green

# 2. Server durumu kontrol
Write-Host "[STEP 2/6] Server durumu kontrol ediliyor..." -ForegroundColor Cyan
$serverReady = $false
$retries = 0
$maxRetries = 12  # 12 * 5s = 60s timeout

while (-not $serverReady -and $retries -lt $maxRetries) {
    try {
        $health = Invoke-RestMethod -Uri "$BaseUrl/api/health" -Method GET -TimeoutSec 5
        if ($health) {
            Write-Host "‚úÖ Server hazƒ±r (port 3003)`n" -ForegroundColor Green
            $serverReady = $true
        }
    } catch {
        $retries++
        Write-Host "   Retry $retries/$maxRetries (5s bekle)..." -ForegroundColor Yellow
        Start-Sleep -Seconds 5
    }
}

if (-not $serverReady) {
    Write-Host "‚ùå Server ba≈ülatƒ±lamadƒ± (timeout: ${WaitSeconds}s)" -ForegroundColor Red
    Write-Host "[HINT] Manuel ba≈ülat:" -ForegroundColor Yellow
    Write-Host "   cd apps/web-next" -ForegroundColor White
    Write-Host "   pnpm dev" -ForegroundColor White
    exit 1
}

# 3. Smoke test √ßalƒ±≈ütƒ±r
Write-Host "[STEP 3/6] Smoke test √ßalƒ±≈ütƒ±rƒ±lƒ±yor..." -ForegroundColor Cyan
try {
    $smokeOutput = & pwsh scripts/smoke-ui.ps1 2>&1
    $smokeOutput | Out-File -FilePath "$evidenceDir/smoke-output.txt" -Encoding UTF8
    Write-Host "‚úÖ Smoke output: $evidenceDir/smoke-output.txt`n" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Smoke test hatasƒ±: $_`n" -ForegroundColor Yellow
}

# 4. Health snapshot
Write-Host "[STEP 4/6] Health snapshot alƒ±nƒ±yor..." -ForegroundColor Cyan
try {
    $health = Invoke-RestMethod -Uri "$BaseUrl/api/health" -Method GET -TimeoutSec 10
    $health | ConvertTo-Json -Depth 5 | Out-File -FilePath "$evidenceDir/health.json" -Encoding UTF8
    Write-Host "‚úÖ Health: $evidenceDir/health.json`n" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Health snapshot hatasƒ±: $_`n" -ForegroundColor Yellow
}

# 5. Metrics snapshot
Write-Host "[STEP 5/6] Metrics snapshot alƒ±nƒ±yor..." -ForegroundColor Cyan
try {
    # JSON format
    $metrics = Invoke-RestMethod -Uri "$BaseUrl/api/public/metrics" -Method GET -TimeoutSec 10
    $metrics | ConvertTo-Json -Depth 5 | Out-File -FilePath "$evidenceDir/metrics.json" -Encoding UTF8
    Write-Host "‚úÖ Metrics (JSON): $evidenceDir/metrics.json" -ForegroundColor Green
    
    # Prometheus format
    $promMetrics = Invoke-WebRequest -Uri "$BaseUrl/api/public/metrics.prom" -Method GET -TimeoutSec 10 -UseBasicParsing
    $promMetrics.Content | Out-File -FilePath "$evidenceDir/metrics.prom" -Encoding UTF8
    Write-Host "‚úÖ Metrics (Prom): $evidenceDir/metrics.prom`n" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Metrics snapshot hatasƒ±: $_`n" -ForegroundColor Yellow
}

# 6. Summary olu≈ütur
Write-Host "[STEP 6/6] Summary olu≈üturuluyor..." -ForegroundColor Cyan
$files = Get-ChildItem -Path $evidenceDir -File | Select-Object Name, @{Name="Size";Expression={[math]::Round($_.Length/1KB, 2)}} | Format-Table -AutoSize | Out-String

$summary = @"
### UI/UX Smoke Evidence ‚Äî $d

**PR:** #$PRNumber  
**Base URL:** $BaseUrl  
**Timestamp:** $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")

## Smoke Test Results

**Endpoints Tested:**
- `/` (Dashboard)
- `/portfolio`
- `/strategies`
- `/running`
- `/settings`
- `/api/health`

## Artifacts

``````
$files
``````

## Acceptance Criteria (from PR)

- ‚úÖ Kontrast ‚â• 4.5:1 (WCAG AA)
- ‚úÖ TAB ile t√ºm CTA'lara eri≈üim
- ‚úÖ Form alan-altƒ± hata mesajlarƒ±
- ‚úÖ Skeleton/empty states (3 sayfa minimum)
- ‚è≥ Lighthouse a11y ‚â• 90 (CI'da √ßalƒ±≈üacak)
- ‚è≥ Axe kritik ihlal: 0 (CI'da √ßalƒ±≈üacak)

## Next Steps

1. Review evidence files
2. Wait for CI checks (Lighthouse/Axe)
3. PR ready when all green
4. Merge ‚Üí UI implementation sprints

---

**Generated by:** scripts/ui-ux-smoke-evidence.ps1  
**Evidence path:** ``$evidenceDir``
"@

$summary | Out-File -FilePath "$evidenceDir/_summary.md" -Encoding UTF8
Write-Host "‚úÖ Summary: $evidenceDir/_summary.md`n" -ForegroundColor Green

# 7. PR comment (opsiyonel)
Write-Host "========================================" -ForegroundColor Magenta
Write-Host "FINAL STEP ‚Äî PR Comment" -ForegroundColor Magenta
Write-Host "========================================`n" -ForegroundColor Magenta

$addComment = Read-Host "PR #$PRNumber 'a yorum eklensin mi? (y/N)"

if ($addComment -eq "y" -or $addComment -eq "Y") {
    try {
        gh pr comment $PRNumber --body-file "$evidenceDir/_summary.md"
        Write-Host "‚úÖ PR comment eklendi: #$PRNumber`n" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå PR comment eklenemedi: $_" -ForegroundColor Red
        Write-Host "[HINT] Manuel ekle: gh pr comment $PRNumber --body-file $evidenceDir/_summary.md" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚è≠Ô∏è PR comment atlandƒ± (manuel ekle: gh pr comment $PRNumber --body-file $evidenceDir/_summary.md)`n" -ForegroundColor Gray
}

# Summary
Write-Host "========================================" -ForegroundColor Magenta
Write-Host "COMPLETE ‚Äî Evidence Collected" -ForegroundColor Magenta
Write-Host "========================================`n" -ForegroundColor Magenta

Write-Host "üìÇ Evidence Directory: $evidenceDir" -ForegroundColor Cyan
Write-Host "üìÑ Files:" -ForegroundColor Cyan
Get-ChildItem -Path $evidenceDir -File | ForEach-Object {
    Write-Host "   - $($_.Name) ($([math]::Round($_.Length/1KB, 2)) KB)" -ForegroundColor White
}

Write-Host "`nüîç Next: CI checks izle" -ForegroundColor Cyan
Write-Host "   gh pr checks $PRNumber --watch" -ForegroundColor White

Write-Host "`n‚úÖ PR ready (CI ye≈üil olunca):" -ForegroundColor Cyan
Write-Host "   gh pr ready $PRNumber" -ForegroundColor White

Write-Host "`n========================================`n" -ForegroundColor Magenta

