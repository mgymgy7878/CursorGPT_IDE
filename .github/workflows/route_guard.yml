name: route_guard

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  route-200:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Enable pnpm
        run: |
          corepack enable
          corepack prepare pnpm@10.0.0 --activate
      - name: Install
        run: pnpm -w i --frozen-lockfile=false
      - name: Build standalone
        run: pnpm -w --filter web-next build
      - name: Prepare standalone assets
        run: |
          mkdir -p apps/web-next/.next/standalone/apps/web-next/.next
          cp -r apps/web-next/.next/static apps/web-next/.next/standalone/apps/web-next/.next/ || true
          cp -r apps/web-next/public       apps/web-next/.next/standalone/apps/web-next/       || true
      - name: Start Next server (bg)
        run: |
          export NODE_ENV=production
          export NEXT_TELEMETRY_DISABLED=1
          export PORT=3003
          export HOSTNAME=127.0.0.1
          node apps/web-next/.next/standalone/server.js >server.log 2>&1 &
      - name: Wait for /api/health
        run: |
          npx -y wait-on http-get://127.0.0.1:3003/api/health
          curl -sSfI http://127.0.0.1:3003/api/health | tee health.hdr
      - name: Assert metrics JSON header
        run: |
          curl -sSfI http://127.0.0.1:3003/api/public/metrics | tee metrics.hdr
          grep -Ei '^content-type: application/json' metrics.hdr
          grep -Ei '^cache-control:.*no-store' metrics.hdr || true
      - name: Assert metrics.prom headers
        run: |
          curl -sSI http://127.0.0.1:3003/api/public/metrics.prom | tee prom.hdr
          grep -E '^Content-Type: text/plain; version=0.0.4' prom.hdr
          grep -Ei '^Cache-Control:.*no-store' prom.hdr
      - name: Troubleshoot on failure
        if: failure()
        run: |
          echo '--- SERVER LOG TAIL ---'
          tail -n +1 server.log || true

