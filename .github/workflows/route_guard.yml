name: route_guard

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  route-200:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      CI: "1"
      NEXT_TELEMETRY_DISABLED: "1"
      NODE_OPTIONS: "--max_old_space_size=4096"
      NEXT_PUBLIC_EXECUTOR_URL: "http://127.0.0.1:4001"
      NEXT_PUBLIC_MARKETDATA_URL: "http://127.0.0.1:5001"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20.11.1"
      - name: Enable pnpm
        run: |
          corepack enable
          corepack prepare pnpm@10.0.0 --activate
      - name: Setup pnpm cache
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml
      - name: Print env + versions
        run: |
          node -v
          pnpm -v
          printenv | grep -E "(CI|NODE|NEXT|PNPM)" | sort
      - name: Install (verbose)
        run: pnpm -w i --frozen-lockfile=false 2>&1 | tee install.log
      - name: Upload install logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: route-200-install-logs
          path: install.log
      - name: Build standalone
        run: pnpm -w --filter web-next build 2>&1 | tee build.log
      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: route-200-build-logs
          path: build.log
      - name: Prepare standalone assets
        run: |
          mkdir -p apps/web-next/.next/standalone/apps/web-next/.next
          cp -r apps/web-next/.next/static apps/web-next/.next/standalone/apps/web-next/.next/ || true
          cp -r apps/web-next/public       apps/web-next/.next/standalone/apps/web-next/       || true
      - name: Start Next server (bg)
        run: |
          export NODE_ENV=production
          export NEXT_TELEMETRY_DISABLED=1
          export PORT=3003
          export HOSTNAME=127.0.0.1
          node apps/web-next/.next/standalone/server.js >server.log 2>&1 &
      - name: Wait for /api/health
        run: |
          npx -y wait-on http-get://127.0.0.1:3003/api/health
          curl -sSfI http://127.0.0.1:3003/api/health | tee health.hdr
      - name: Assert metrics JSON header
        run: |
          curl -sSfI http://127.0.0.1:3003/api/public/metrics | tee metrics.hdr
          grep -Ei '^content-type: application/json' metrics.hdr
          grep -Ei '^cache-control:.*no-store' metrics.hdr || true
      - name: Assert metrics.prom headers
        run: |
          curl -sSI http://127.0.0.1:3003/api/public/metrics.prom | tee prom.hdr
          grep -E '^Content-Type: text/plain; version=0.0.4' prom.hdr
          grep -Ei '^Cache-Control:.*no-store' prom.hdr
      - name: Troubleshoot on failure
        if: failure()
        run: |
          echo '--- SERVER LOG TAIL ---'
          tail -n +1 server.log || true
          echo '--- BUILD LOG TAIL ---'
          tail -n 50 build.log || true
          echo '--- INSTALL LOG TAIL ---'
          tail -n 50 install.log || true
