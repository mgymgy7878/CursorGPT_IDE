name: route_guard

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  route-200:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: corepack enable && corepack prepare pnpm@10.0.0 --activate
      - run: pnpm -w i --frozen-lockfile=false
      - run: pnpm -w --filter web-next build
      - name: Start standalone server (prod @3003)
        run: |
          PORT=3003 HOSTNAME=127.0.0.1 NODE_ENV=production \
          node apps/web-next/.next/standalone/server.js &
      - run: npx wait-on http://127.0.0.1:3003/api/health
      - name: Assert health 200
        run: curl -sfI http://127.0.0.1:3003/api/health | grep -i '200'
      - name: Assert metrics JSON
        run: curl -sI http://127.0.0.1:3003/api/public/metrics | grep -i 'content-type: application/json'
      - name: Assert metrics.prom headers (ctype + no-store)
        run: |
          curl -sI http://127.0.0.1:3003/api/public/metrics.prom | tee headers.txt
          grep -iE '^content-type:\s*text/plain;\s*version=0\.0\.4(;\s*charset=.*)?$' headers.txt
          grep -iE '^cache-control:.*no-store' headers.txt

