name: Contract & Chaos Tests

on:
  pull_request:
    branches: [main, develop]
    paths:
      - 'services/**'
      - 'apps/**'
      - 'tests/contract/**'
      - 'tests/chaos/**'
  push:
    branches: [main]
  schedule:
    # Run chaos tests weekly on Sunday at 2 AM
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      run_chaos:
        description: 'Run chaos tests'
        required: false
        default: 'false'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  contract-tests:
    name: Contract Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      pact-broker:
        image: pactfoundation/pact-broker:latest
        env:
          PACT_BROKER_DATABASE_URL: sqlite:///tmp/pact_broker.sqlite
        ports:
          - 9292:9292

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      
      - name: Verify pnpm version
        run: |
          EXPECTED=$(node -p "require('./package.json').packageManager.split('@')[1]")
          ACTUAL=$(pnpm -v)
          test "$ACTUAL" = "$EXPECTED" || { echo "::error::pnpm mismatch"; exit 1; }
      
      - name: Fetch dependencies
        run: pnpm fetch --prod=false

      - name: Install dependencies (offline)
        run: pnpm install --offline --frozen-lockfile --strict-peer-dependencies

      - name: Run contract tests
        run: pnpm test:contract
        env:
          PACT_BROKER_URL: http://localhost:9292
          PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN || '' }}

      - name: Publish pacts to broker
        if: github.ref == 'refs/heads/main'
        run: |
          pnpm dlx pact-broker publish ./pacts \
            --consumer-app-version=${{ github.sha }} \
            --branch=${{ github.ref_name }} \
            --broker-base-url=http://localhost:9292

      - name: Upload pact files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: pact-files
          path: pacts/
          retention-days: 30

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: contract-test-results
          path: |
            logs/
            test-results/
          retention-days: 7

  chaos-tests:
    name: Chaos Engineering Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' && github.event.inputs.run_chaos == 'true'

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: spark_trading_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      toxiproxy:
        image: ghcr.io/shopify/toxiproxy:latest
        ports:
          - 8474:8474
          - 26432:26432
          - 26379:26379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      
      - name: Verify pnpm version
        run: |
          EXPECTED=$(node -p "require('./package.json').packageManager.split('@')[1]")
          ACTUAL=$(pnpm -v)
          test "$ACTUAL" = "$EXPECTED" || { echo "::error::pnpm mismatch"; exit 1; }
      
      - name: Fetch dependencies
        run: pnpm fetch --prod=false

      - name: Install dependencies (offline)
        run: pnpm install --offline --frozen-lockfile --strict-peer-dependencies

      - name: Setup database
        run: |
          pnpm prisma migrate deploy
          pnpm prisma db seed
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/spark_trading_test

      - name: Build services
        run: pnpm build

      - name: Start services in background
        run: |
          pnpm --filter executor start &
          pnpm --filter web-next start &
          sleep 10
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/spark_trading_test
          REDIS_URL: redis://localhost:6379

      - name: Wait for services to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:4001/api/healthz; do sleep 2; done'
          timeout 60 bash -c 'until curl -f http://localhost:3003/api/healthz; do sleep 2; done'

      - name: Run chaos tests
        run: pnpm test:chaos
        env:
          TOXIPROXY_URL: http://localhost:8474
          DATABASE_URL: postgresql://postgres:postgres@localhost:26432/spark_trading_test
          REDIS_URL: redis://localhost:26379

      - name: Collect chaos test metrics
        if: always()
        run: |
          curl -s http://localhost:4001/api/public/metrics.prom > chaos-metrics.txt

      - name: Upload chaos test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: chaos-test-results
          path: |
            logs/
            test-results/
            chaos-metrics.txt
          retention-days: 30

      - name: Notify on failure
        if: failure()
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "text": "üå™Ô∏è Chaos tests failed on ${{ github.ref_name }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Chaos Tests Failed*\n\nBranch: `${{ github.ref_name }}`\nRun: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL || '' }}

  resilience-report:
    name: Generate Resilience Report
    runs-on: ubuntu-latest
    needs: [contract-tests, chaos-tests]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download contract test results
        uses: actions/download-artifact@v3
        with:
          name: contract-test-results
          path: ./results/contract/
        continue-on-error: true

      - name: Download chaos test results
        uses: actions/download-artifact@v3
        with:
          name: chaos-test-results
          path: ./results/chaos/
        continue-on-error: true

      - name: Generate resilience report
        run: |
          cat > resilience-report.md << 'EOF'
          # Resilience Test Report
          
          **Date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          **Commit:** ${{ github.sha }}
          **Branch:** ${{ github.ref_name }}
          
          ## Contract Tests
          
          ${{ needs.contract-tests.result == 'success' && '‚úÖ PASS' || '‚ùå FAIL' }}
          
          ## Chaos Tests
          
          ${{ needs.chaos-tests.result == 'success' && '‚úÖ PASS' || (needs.chaos-tests.result == 'skipped' && '‚è≠Ô∏è SKIPPED' || '‚ùå FAIL') }}
          
          ## Summary
          
          - Contract Tests: ${{ needs.contract-tests.result }}
          - Chaos Tests: ${{ needs.chaos-tests.result }}
          
          ## Recommendations
          
          ${{ needs.chaos-tests.result == 'failure' && '‚ö†Ô∏è System showed resilience issues under chaos. Review logs and improve error handling, retries, and circuit breakers.' || '‚úÖ System demonstrated good resilience under adverse conditions.' }}
          
          EOF

      - name: Upload resilience report
        uses: actions/upload-artifact@v3
        with:
          name: resilience-report
          path: resilience-report.md
          retention-days: 90

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('resilience-report.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
