name: pr-smoke

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run smoke tests on'
        required: false
        type: string

jobs:
  smoke:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/web-next
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.3
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Show tool versions
        run: |
          node -v
          pnpm -v

      - name: Build web-next (standalone)
        run: pnpm build

      - name: Start server
        env:
          NODE_ENV: production
          PORT: 3003
          HOSTNAME: 127.0.0.1
        working-directory: apps/web-next
        run: |
          set -e
          if [ -f ".next/standalone/server.js" ]; then
            nohup node .next/standalone/server.js > ../../pr-smoke-server.log 2>&1 &
            sleep 2
            if ! (command -v lsof >/dev/null && lsof -i :3003 -sTCP:LISTEN >/dev/null 2>&1); then
              echo "Standalone not listening, fallback to next start" | tee -a ../../pr-smoke-server.log
              nohup npx next start -p 3003 -H 127.0.0.1 >> ../../pr-smoke-server.log 2>&1 &
            fi
          else
            echo "No .next/standalone found, using next start" | tee -a ../../pr-smoke-server.log
            nohup npx next start -p 3003 -H 127.0.0.1 > ../../pr-smoke-server.log 2>&1 &
          fi

      - name: Wait for health (120s)
        uses: jb-1980/wait-on-action@v1
        with:
          resource: http-get://127.0.0.1:3003/api/health
          timeout: 120000
          log: true

      - name: Smoke checks (health, metrics)
        run: |
          curl -sSf http://127.0.0.1:3003/api/health | tee ../../evidence/build/health.json
          curl -sSf http://127.0.0.1:3003/api/public/metrics | tee ../../evidence/build/metrics.json
          curl -sSI http://127.0.0.1:3003/api/public/metrics.prom | tee ../../evidence/build/metrics.headers.txt

      - name: Assert Prometheus header
        run: |
          ct=$(curl -sI http://127.0.0.1:3003/api/public/metrics.prom | awk -F': ' '/^content-type/{print tolower($2)}' | tr -d '\r')
          echo "Content-Type: $ct"
          if [ "$ct" != "text/plain; version=0.0.4" ]; then
            echo "Bad Content-Type: $ct"
            exit 1
          fi

      - name: Upload evidence
        uses: actions/upload-artifact@v4
        with:
          name: pr-smoke-evidence
          path: evidence/build

      - name: Cleanup
        if: always()
        run: |
          pkill -f "node .next/standalone/server.js" || true
