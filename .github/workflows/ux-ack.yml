name: UX-ACK Gate
on:
  pull_request:
    types: [opened, edited, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  gate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      
      - name: Verify pnpm version
        run: |
          EXPECTED=$(node -p "require('./package.json').packageManager.split('@')[1]")
          ACTUAL=$(pnpm -v)
          test "$ACTUAL" = "$EXPECTED" || { echo "::error::pnpm mismatch"; exit 1; }
      
      - name: Fetch dependencies
        run: pnpm fetch --prod=false
      
      - name: Install (offline)
        run: pnpm -w install --offline --frozen-lockfile --strict-peer-dependencies
      - name: Compute UX-ACK
        id: ux
        run: echo "hash=$(pnpm -s ui:hash -- --print | tail -n1)" >> $GITHUB_OUTPUT
      - name: Check PR body
        env:
          HASH: ${{ steps.ux.outputs.hash }}
        run: |
          echo "Expected: $HASH"
          body="${{ github.event.pull_request.body }}"
          grep -q "$HASH" <<< "$body" || { echo "PR body missing $HASH"; exit 1; }
      - name: Freeze enforcement (optional)
        if: ${{ (vars.FREEZE || '') == '1' || (env.FREEZE || '') == '1' }}
        run: |
          pnpm -s lint:tokens
          pnpm -s ui:test


