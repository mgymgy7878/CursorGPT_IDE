╔═══════════════════════════════════════════════════════════╗
║  🧨 EDGE-CASE PAKETİ - UÇ DURUM SENARYOLARI             ║
║  "Her Şey Doğru Görünüyor Ama Hâlâ Refused"             ║
╚═══════════════════════════════════════════════════════════╝

🧨 EDGE-CASE PAKETİ (Yalnız İnat Eden Vakalar)
─────────────────────────────────────────────────────────────

A) WINDOWS/DOCKER KÖPRÜ SAPITMASI (WSL/Hyper-V)
─────────────────────────────────────────────────────────────
# WSL köprüsünü sıfırla (Docker Desktop da WSL kullanır)
wsl --shutdown
net stop com.docker.service /y; net start com.docker.service
# 30 sn sonra tekrar dene

B) PORT "PUBLISH VAR" AMA HOST TARAFINDA INTERCEPT
─────────────────────────────────────────────────────────────
# Kurumsal proxy/HSTS/AV müdahalesi dışla: raw HTTP nabız
curl.exe -v http://127.0.0.1:3003/ --max-time 3

C) IPV6/IPV4 TERS YAKALAMA
─────────────────────────────────────────────────────────────
# Next sadece IPv6 dinliyorsa:
Test-NetConnection ::1 -Port 3003
# Tarayıcıyı açıkça IPv6 ile vur:
start http://[::1]:3003/

D) YANLIŞ HOST ÇÖZÜMLEMESİ
─────────────────────────────────────────────────────────────
# hosts dosyasında 127.0.0.1 için garip eşleşme var mı?
powershell -c "gc $env:WINDIR\System32\drivers\etc\hosts | ? {$_ -match '127\.0\.0\.1'}"

E) PORTU WINDOWS HTTP.SYS REZERVE ETMİŞSE (PID 4)
─────────────────────────────────────────────────────────────
# nadir ama görüldü: http.sys URLACL temizle
netsh http show urlacl | findstr /i ":3003"
netsh http delete urlacl url=http://+:3003/  2>$null

F) DOCKER PUBLISH DOĞRU, APP İÇERİDEN 200 VERİYOR; YİNE DE DIŞARIDAN YOK
─────────────────────────────────────────────────────────────
# NAT kuralını tazele
docker compose down -v
docker network prune -f
docker compose up --build -d

G) PNPM/NODE UYUMSUZLUĞU (Silent Fail)
─────────────────────────────────────────────────────────────
corepack enable
node -v            # >= 18.x olmalı
pnpm -v            # 8.x önerilir
pnpm install --frozen-lockfile=false

H) "READY" SATIRININ ÖNCESİNDEKİ İLK HATAYI ÇEKİP ÇIKAR
─────────────────────────────────────────────────────────────
Select-String -Path .\apps\web-next\dev.log -Pattern 'ERROR|ERR|Unhandled|TypeError' -SimpleMatch -CaseSensitive | Select -First 1

🔍 HIZLI DOĞRULAMA ÜÇLÜSÜ (Son Tur)
─────────────────────────────────────────────────────────────
docker ps --format "table {{.Names}}\t{{.Ports}}"     # → 0.0.0.0:3003->(3003|3000)
curl -I http://127.0.0.1:3003/api/healthz            # → HTTP/1.1 200
docker logs -n 50 <web-container> | findstr ready    # → started server on 0.0.0.0:3003

🧭 DEVAM YÖNÜ
─────────────────────────────────────────────────────────────
Bu edge-caselerden sonra hâlâ kilitliyse, tek şeye bak: 
dev.log'daki ilk hata satırı. O, sistemin dürüst sahne amiridir. 
Onu susturduğunda perde açılır.

🎯 RİTİM: 60 BPM
─────────────────────────────────────────────────────────────
Başlat → Ölç → Düzelt

Şimdi sahne senin.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🎬 MÜZİK!

