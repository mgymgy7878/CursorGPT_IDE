# NGINX Security Headers - Drop-In Include
# Include this in every server{} and location{} block that needs full security
#
# NOTE: add_header inheritance trap!
# Child location{} blocks with add_header DO NOT inherit parent headers.
# SOLUTION: Include this file in every location{} block explicitly.
#
# Usage:
#   server {
#       include /etc/nginx/includes/security-headers.conf;
#       
#       location /api/ {
#           include /etc/nginx/includes/security-headers.conf;
#           # ... other directives
#       }
#   }

# HSTS (HTTPS only, 1 year, include subdomains, preload list)
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# Prevent MIME sniffing
add_header X-Content-Type-Options "nosniff" always;

# Clickjacking protection
add_header X-Frame-Options "DENY" always;

# Referrer policy (privacy)
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# XSS Protection (legacy, but still useful)
add_header X-XSS-Protection "1; mode=block" always;

# Cross-Origin Resource Policy
add_header Cross-Origin-Resource-Policy "same-origin" always;

# Cross-Origin Opener Policy
add_header Cross-Origin-Opener-Policy "same-origin" always;

# Cross-Origin Embedder Policy
add_header Cross-Origin-Embedder-Policy "require-corp" always;

# Permissions Policy (disable risky features)
add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=()" always;

# Content Security Policy (strict but allows Next.js + WebSocket)
add_header Content-Security-Policy "default-src 'self'; base-uri 'self'; img-src 'self' data: https:; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; connect-src 'self' wss: https:; font-src 'self' data:; object-src 'none'; frame-ancestors 'none'; upgrade-insecure-requests;" always;

# NOTE: Adjust CSP directives based on your needs:
# - 'unsafe-eval' needed for Monaco Editor
# - 'unsafe-inline' needed for Tailwind/Next.js CSS-in-JS
# - wss: needed for WebSocket connections
# - https: needed for external API calls

# For stricter CSP, add nonce support:
# script-src 'self' 'nonce-$request_id';
# Then inject nonce in HTML: <script nonce="...">

